# Generated by Django 3.0 on 2021-10-20 11:20

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_column='email', help_text='Email', max_length=100, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('slug', models.SlugField(blank=True, max_length=500, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('identity', models.CharField(db_column='identity', help_text='Identity', max_length=20, verbose_name='Identity')),
                ('first_name', models.CharField(db_column='first_name', help_text='First Name', max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(db_column='last_name', help_text='Last Name', max_length=100, verbose_name='Last Name')),
                ('mobile_phone', models.CharField(blank=True, db_column='mobile_phone', help_text='Mobile Phone', max_length=10, null=True, validators=[django.core.validators.RegexValidator('^[\\+]?[0-9]+$', 'only characters, 0-9')], verbose_name='Mobile Phone')),
                ('direction', models.CharField(blank=True, db_column='direction', help_text='Direction', max_length=250, null=True, verbose_name='Direction')),
                ('city', models.CharField(blank=True, db_column='city', help_text='City', max_length=50, null=True, verbose_name='City')),
                ('postal_code', models.CharField(blank=True, db_column='postal_code', help_text='Postal Code', max_length=20, null=True, verbose_name='Postal Code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user_user',
            },
        ),
    ]
